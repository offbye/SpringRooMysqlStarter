// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cn.fnic.dhc.web;

import cn.fnic.dhc.domain.AdminRole;
import cn.fnic.dhc.domain.AdminUser;
import cn.fnic.dhc.service.AdminRoleService;
import cn.fnic.dhc.service.AdminUserService;
import cn.fnic.dhc.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AdminRoleService ApplicationConversionServiceFactoryBean.adminRoleService;
    
    @Autowired
    AdminUserService ApplicationConversionServiceFactoryBean.adminUserService;
    
    public Converter<AdminRole, String> ApplicationConversionServiceFactoryBean.getAdminRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cn.fnic.dhc.domain.AdminRole, java.lang.String>() {
            public String convert(AdminRole adminRole) {
                return new StringBuilder().append(adminRole.getRoleName()).append(' ').append(adminRole.getDescription()).append(' ').append(adminRole.getAuth()).append(' ').append(adminRole.getCreateTime()).toString();
            }
        };
    }
    
    public Converter<Long, AdminRole> ApplicationConversionServiceFactoryBean.getIdToAdminRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, cn.fnic.dhc.domain.AdminRole>() {
            public cn.fnic.dhc.domain.AdminRole convert(java.lang.Long id) {
                return adminRoleService.findAdminRole(id);
            }
        };
    }
    
    public Converter<String, AdminRole> ApplicationConversionServiceFactoryBean.getStringToAdminRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cn.fnic.dhc.domain.AdminRole>() {
            public cn.fnic.dhc.domain.AdminRole convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AdminRole.class);
            }
        };
    }
    
    public Converter<AdminUser, String> ApplicationConversionServiceFactoryBean.getAdminUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<cn.fnic.dhc.domain.AdminUser, java.lang.String>() {
            public String convert(AdminUser adminUser) {
                return new StringBuilder().append(adminUser.getUsername()).append(' ').append(adminUser.getEmail()).append(' ').append(adminUser.getPassword()).append(' ').append(adminUser.getRealName()).toString();
            }
        };
    }
    
    public Converter<Long, AdminUser> ApplicationConversionServiceFactoryBean.getIdToAdminUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, cn.fnic.dhc.domain.AdminUser>() {
            public cn.fnic.dhc.domain.AdminUser convert(java.lang.Long id) {
                return adminUserService.findAdminUser(id);
            }
        };
    }
    
    public Converter<String, AdminUser> ApplicationConversionServiceFactoryBean.getStringToAdminUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, cn.fnic.dhc.domain.AdminUser>() {
            public cn.fnic.dhc.domain.AdminUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AdminUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAdminRoleToStringConverter());
        registry.addConverter(getIdToAdminRoleConverter());
        registry.addConverter(getStringToAdminRoleConverter());
        registry.addConverter(getAdminUserToStringConverter());
        registry.addConverter(getIdToAdminUserConverter());
        registry.addConverter(getStringToAdminUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}

<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" xmlns:spring="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <jsp:directive.tag import="java.util.ArrayList" />
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
  <jsp:directive.attribute name="data" type="java.util.Collection" required="true" rtexprvalue="true" description="The collection to be displayed in the table" />
  <jsp:directive.attribute name="path" type="java.lang.String" required="true" rtexprvalue="true" description="Specify the URL path" />
  <jsp:directive.attribute name="typeIdFieldName" type="java.lang.String" required="false" rtexprvalue="true" description="The identifier field name for the type (defaults to 'id')" />
  <jsp:directive.attribute name="create" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'create' link into table (default true)" />
  <jsp:directive.attribute name="update" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'update' link into table (default true)" />
  <jsp:directive.attribute name="delete" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'delete' link into table (default true)" />
  <jsp:directive.attribute name="multiselect" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'checkbox' link into table (default false)" />
  <jsp:directive.attribute name="trash" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'trash' link into table (default false)" />
  <jsp:directive.attribute name="untrash" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'untrash' link into table (default false)" />
  <jsp:directive.attribute name="toggle" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'toggle' link into table (default false)" />  
  <jsp:directive.attribute name="fastedit" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Include 'fastedit' link into table (default false)" />  
  <jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
  <jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />
  
  <c:if test="${empty render or render}">

    <c:set var="columnProperties" scope="request" />
    <c:set var="columnLabels" scope="request" />
    <c:set var="columnMaxLengths" scope="request" />
    <c:set var="columnTypes" scope="request" />
    <c:set var="columnDatePatterns" scope="request" />
    <c:set var="columnFastEdits" scope="request" />

    <jsp:doBody />

    <c:if test="${empty typeIdFieldName}">
      <c:set var="typeIdFieldName" value="id" />
    </c:if>

    <c:if test="${empty update}">
      <c:set var="update" value="true" />
    </c:if>

    <c:if test="${empty delete}">
      <c:set var="delete" value="true" />
    </c:if>

    <c:if test="${empty multiselect}">
      <c:set var="multiselect" value="false" />
    </c:if>
    
    <c:if test="${empty trash}">
      <c:set var="trash" value="false" />
    </c:if>
    
    <c:if test="${empty untrash}">
      <c:set var="untrash" value="false" />
    </c:if>
    
    <c:if test="${empty toggle}">
      <c:set var="toggle" value="false" />
    </c:if>
    
    <c:if test="${empty fastedit}">
      <c:set var="fastedit" value="false" />
    </c:if>
    
    
    <spring:message var="typeName" code="menu_item_${fn:toLowerCase(fn:split(id,'_')[fn:length(fn:split(id,'_')) - 1])}_new_label" htmlEscape="false" />
    <c:set var="lengths" value="${fn:split(columnMaxLengths, '&#9999;')}" scope="request" />
    <c:set var="types" value="${fn:split(columnTypes, '&#9999;')}" scope="request" />
    <c:set var="patterns" value="${fn:split(columnDatePatterns, '&#9999;')}" scope="request" />
    <c:set var="fastedits" value="${fn:split(columnFastEdits, '&#9999;')}" scope="request" />
    <spring:eval var="colCounter" expression="1" />

    <table>
      <thead>
        <tr>
          <c:forTokens items="${columnLabels}" delims="${'&#9999;'}" var="columnHeading">
            <th>
              <c:out value="${columnHeading}" />
              <spring:eval var="colCounter" expression="colCounter  + 1" />
            </th>
          </c:forTokens>
          <th></th>
          <c:if test="${update}">
            <th></th>
            <spring:eval var="colCounter" expression="colCounter  + 1" />
          </c:if>
          <c:if test="${delete}">
            <th></th>
            <spring:eval var="colCounter" expression="colCounter  + 1" />
          </c:if>
                    
          <c:if test="${trash}">
            <th></th>
            <spring:eval var="colCounter" expression="colCounter  + 1" />
          </c:if>
          
          <c:if test="${untrash}">
            <th></th>
            <spring:eval var="colCounter" expression="colCounter  + 1" />
          </c:if>
          
          <c:if test="${multiselect}">
            <th><input type="checkbox" name="selectAll" id="selectAll" style="border:0px;padding:0px;margin:0px;" onclick="checkAll(this,'checkbox')"/></th>
            <spring:eval var="colCounter" expression="colCounter  + 1" />
          </c:if>
        </tr>
      </thead>
      <c:forEach items="${data}" var="item">
        <tr>
          <c:forTokens items="${columnProperties}" delims="${'&#9999;'}" var="column" varStatus="num">
            <c:set var="columnMaxLength" value="${lengths[num.count-1]}" />
            <c:set var="columnType" value="${types[num.count-1]}" />
            <c:set var="columnDatePattern" value="${patterns[num.count-1]}" />        
            <c:set var="columnFastEdit" value="${fastedits[num.count-1]}" />
            <td>
              <c:set var="itemId"><spring:eval expression="item[typeIdFieldName]"/></c:set>
              <c:choose>
                <c:when test="${columnType eq 'date'}">
                  <spring:escapeBody>
                    <fmt:formatDate value="${item[column]}" pattern="${fn:escapeXml(columnDatePattern)}" var="colTxt" />
                  </spring:escapeBody>
                </c:when>
                <c:when test="${columnType eq 'calendar'}">
                  <spring:escapeBody>
                    <fmt:formatDate value="${item[column].time}" pattern="${fn:escapeXml(columnDatePattern)}" var="colTxt"/>
                  </spring:escapeBody>
                </c:when>
                
                <c:when test="${columnType eq 'object'}">111
                  <c:set var="objTxt">
                    <spring:eval expression="item[column]" htmlEscape="false" />
                  </c:set>
                  <c:out value="${objTxt}" />
                </c:when>
                
                <c:when test="${columnType eq 'image'}">2222
                   <spring:url value="/resources/images/yes.gif" var="image_url" />
                   <img class="image" src="${image_url}" onclick="listTable.selectImage(this, '${column}', '${itemId}')"/>
                </c:when>
                
                <c:otherwise>
                  <c:set var="colTxt">
                    <spring:eval expression="item[column]" htmlEscape="false" />
                  </c:set>
                </c:otherwise>
              </c:choose>
              <c:if test="${columnMaxLength ge 0}">
                <c:set value="${fn:substring(colTxt, 0, columnMaxLength)}" var="colTxt" />
              </c:if>
            

              <c:choose>
                <c:when test="${colTxt eq 'true'}">
                   <spring:url value="/resources/images/yes.gif" var="yes_image_url" />
                   <img class="image" src="${yes_image_url}" onclick="listTable.toggle(this, '${column}', '${itemId}')"/>
                </c:when>
                <c:when test="${colTxt eq 'false'}">
                   <spring:url value="/resources/images/no.gif" var="no_image_url" />
                   <img class="image" src="${no_image_url}" onclick="listTable.toggle(this, '${column}', '${itemId}')"/>
                </c:when>
                <c:otherwise>
                    <c:choose>
                     <c:when test="${columnFastEdit eq 'true'}">
                          <span onclick="listTable.edit(this, '${column}', '${itemId}')" title="click edit it"> <c:out value="${colTxt}" /></span>
                     </c:when>
                     <c:otherwise>
                          <span><c:out value="${colTxt}" /></span>
                     </c:otherwise>
                     </c:choose>
                </c:otherwise>
              </c:choose>
              
            </td>
          </c:forTokens>
          <c:set var="itemId"><spring:eval expression="item[typeIdFieldName]"/></c:set>
          <td class="utilbox">
            <spring:url value="${path}/${itemId}" var="show_form_url" />
            <spring:url value="/resources/images/show.png" var="show_image_url" />
            <spring:message arguments="${typeName}" code="entity_show" var="show_label" htmlEscape="false" />
            <a href="${show_form_url}" alt="${fn:escapeXml(show_label)}" title="${fn:escapeXml(show_label)}">
              <img alt="${fn:escapeXml(show_label)}" class="image" src="${show_image_url}" title="${fn:escapeXml(show_label)}" />
            </a>
          </td>
          <c:if test="${update}">
            <td class="utilbox">
              <spring:url value="${path}/${itemId}" var="update_form_url">
                <spring:param name="form" />
              </spring:url>
              <spring:url value="/resources/images/update.png" var="update_image_url" />
              <spring:message arguments="${typeName}" code="entity_update" var="update_label" htmlEscape="false" />
              <a href="${update_form_url}" alt="${fn:escapeXml(update_label)}" title="${fn:escapeXml(update_label)}">
                <img alt="${fn:escapeXml(update_label)}" class="image" src="${update_image_url}" title="${fn:escapeXml(update_label)}" />
              </a>
            </td>
          </c:if>
          <c:if test="${delete}">
            <td class="utilbox">
              <spring:url value="${path}/${itemId}" var="delete_form_url" />
              <spring:url value="/resources/images/delete.png" var="delete_image_url" />
              <form:form action="${delete_form_url}" method="DELETE">
                <spring:message arguments="${typeName}" code="entity_delete" var="delete_label" htmlEscape="false" />
                <c:set var="delete_confirm_msg">
                  <spring:escapeBody javaScriptEscape="true">
                    <spring:message code="entity_delete_confirm" />
                  </spring:escapeBody>
                </c:set>
                <input alt="${fn:escapeXml(delete_label)}" class="image" src="${delete_image_url}" title="${fn:escapeXml(delete_label)}" type="image" value="${fn:escapeXml(delete_label)}" onclick="return confirm('${delete_confirm_msg}');" />
                <c:if test="${not empty param.page}">
                  <input name="page" type="hidden" value="1" />
                </c:if>
                <c:if test="${not empty param.size}">
                  <input name="size" type="hidden" value="${fn:escapeXml(param.size)}" />
                </c:if>
              </form:form>
            </td>
          </c:if>
          
          <c:if test="${trash}">
            <td class="utilbox">
              <spring:url value="${path}/trash/add/${itemId}" var="trash_form_url" />
              <spring:url value="/resources/images/trash.gif" var="trash_image_url" />
              <form:form action="${trash_form_url}" method="POST">
                <spring:message arguments="${typeName}" code="entity_trash" var="trash_label" htmlEscape="false" />
                <c:set var="trash_confirm_msg">
                  <spring:escapeBody javaScriptEscape="true">
                    <spring:message code="entity_trash_confirm" />
                  </spring:escapeBody>
                </c:set>
                <input alt="${fn:escapeXml(trash_label)}" class="image" src="${trash_image_url}" title="${fn:escapeXml(trash_label)}" type="image" value="${fn:escapeXml(trash_label)}" onclick="return confirm('${trash_confirm_msg}');" />
                <c:if test="${not empty param.page}">
                  <input name="page" type="hidden" value="1" />
                </c:if>
                <c:if test="${not empty param.size}">
                  <input name="size" type="hidden" value="${fn:escapeXml(param.size)}" />
                </c:if>
              </form:form>
            </td>
          </c:if>
          
          <c:if test="${untrash}">
            <td class="utilbox">
              <spring:url value="${path}/trash/restore/${itemId}" var="untrash_form_url" />
              <spring:url value="/resources/images/trash.gif" var="untrash_image_url" />
              <form:form action="${untrash_form_url}" method="POST">
                <spring:message arguments="${typeName}" code="entity_trash" var="untrash_label" htmlEscape="false" />
                <c:set var="untrash_confirm_msg">
                  <spring:escapeBody javaScriptEscape="true">
                    <spring:message code="entity_untrash_confirm" />
                  </spring:escapeBody>
                </c:set>
                <input alt="${fn:escapeXml(untrash_label)}" class="image" src="${untrash_image_url}" title="${fn:escapeXml(untrash_label)}" type="image" value="${fn:escapeXml(untrash_label)}" onclick="return confirm('${untrash_confirm_msg}');" />
                <c:if test="${not empty param.page}">
                  <input name="page" type="hidden" value="1" />
                </c:if>
                <c:if test="${not empty param.size}">
                  <input name="size" type="hidden" value="${fn:escapeXml(param.size)}" />
                </c:if>
              </form:form>
            </td>
          </c:if>
          
          <c:if test="${multiselect}">
            <td class="utilbox">
                <input type="checkbox" name="checkbox" value="${itemId}"/>
            </td>
          </c:if>
        </tr>
      </c:forEach>
      <tr class="footer">
        <td colspan="${colCounter}">
          <c:if test="${empty create or create}">
            <span class="new">
              <spring:url value="${path}" var="create_url">
                <spring:param name="form" />
              </spring:url>
              <a href="${create_url}">
                <spring:url value="/resources/images/add.png" var="create_img_url" />
                <spring:message arguments="${typeName}" code="global_menu_new" var="add_message" htmlEscape="false" />
                <img alt="${fn:escapeXml(add_message)}" src="${create_img_url}" title="${fn:escapeXml(add_message)}" />
              </a>
            </span>
            <c:out value=" " />
          </c:if>
          
          <c:if test="${not empty maxPages}">
            <util:pagination maxPages="${maxPages}" page="${param.page}" size="${param.size}" />
          </c:if>
        </td>
      </tr>
    </table>
    
<c:if test="${multiselect}">
<script type="text/javascript">
<![CDATA[ 
  
	function checkAll(obj, cName) {
		var checkboxs = document.getElementsByName(cName);
		var len = checkboxs.length;
		for ( var i = 0; i < len; i++) {
			checkboxs[i].checked = obj.checked;
		}
	}

	function getChecked() {
		var re = "";
		var checkboxs = document.getElementsByName("checkbox");
		var len = checkboxs.length;
		for ( var i = 0; i < len; i++) {
			if (checkboxs[i].checked) {
				re += checkboxs[i].value + ",";
			}
		}
		return re.substring(0, re.length - 1);
	}

	function getCheckedIdArray() {
		var re = [];
		var checkboxs = document.getElementsByName("checkbox");
		var len = checkboxs.length;
		for ( var i = 0, j = 0; i < len; i++) {
			if (checkboxs[i].checked) {
				re[j] = checkboxs[i].value;
				j++;
			}
		}
		return re;
	}

	function getAll() {
		var re = "";
		var checkboxs = document.getElementsByName("checkbox");
		var len = checkboxs.length;
		for ( var i = 0; i < len; i++) {
			re += checkboxs[i].value + ",";
		}
		return re.substring(0, re.length - 1);
	}
    ]]>
</script>
</c:if>

<spring:url value="${path}/toggle" var="toggle_url" />
<spring:url value="${path}/fastedit" var="fastedit_url" />
<script type="text/javascript">
<![CDATA[ 
    var listTable = {};
]]>
</script>

<c:if test="${toggle}">
<script type="text/javascript">
	<![CDATA[ 
	listTable.toggle = function(obj, act, id) {
		var val = (obj.src.match(/yes.gif/i)) ? true : false;
		//obj.src = 'images/loading.gif';
		dojo.xhrGet({
			url : '${toggle_url}',
			preventCache : true,
			content : {
				id : id,
				prop : act,
				value : !val
			},
			load : function(response) {
				console.log("xhr get success:", response);
				if (parseInt(response) > 0) {
					obj.src = !val ? 'images/yes.gif' : 'images/no.gif';
				}
			},
			error : function(error) {
				console.log("xhr get failed:", error);
				return error;
			}
		});
	}

    ]]>
	</script>
</c:if>

<c:if test="${fastedit}">
<script type="text/javascript">
    <![CDATA[ 
	listTable.edit = function(obj, act, id) {
		var tag = obj.firstChild.tagName;

		if (typeof (tag) != "undefined" && tag.toLowerCase() == "input") {
			return;
		}

		var org = obj.innerHTML;
		var isIE = window.ActiveXObject ? true : false;
		var val = isIE ? obj.innerText : obj.textContent;

		var txt = document.createElement("INPUT");
		txt.value = (val == 'N/A') ? '' : val;
		txt.style.width = (obj.offsetWidth + 20) + "px";

		obj.innerHTML = "";
		obj.appendChild(txt);
		txt.focus();

		txt.onkeypress = function(e) {
			var evt = (typeof e === "undefined") ? window.event : e;
			//var obj = Utils.srcElement(e);
			if (typeof e == "undefined")
				e = window.event;
			var obj = document.all ? e.srcElement : e.target;

			if (evt.keyCode == 13) {
				obj.blur();
				return false;
			}

			if (evt.keyCode == 27) {
				obj.parentNode.innerHTML = org;
			}
		}

		txt.onblur = function(e) {
			if (dojo.string.trim(txt.value).length > 0 && dojo.string.trim(txt.value) != org) {

				dojo.xhrGet({
					url : '${fastedit_url}',
					preventCache : true,
					content : {
						id : id,
						prop : act,
						value : encodeURIComponent(dojo.string.trim(txt.value))
					},
					load : function(response) {
						console.log("xhr get success:", response);
						if (parseInt(response) > 0) {
							obj.innerHTML = txt.value;
						} else {
							obj.innerHTML = org;
							alert("not inplement");
						}
					},
					error : function(error) {
						console.log("xhr get failed:", error);
						obj.innerHTML = org;

						return error;
					}
				});

			} else {
				obj.innerHTML = org;
			}
		}
	}
	]]>
</script>
</c:if>
  </c:if>
</jsp:root>
